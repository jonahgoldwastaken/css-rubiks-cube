/* Perspective approach inspired by https://github.com/diervo/html5rubik/blob/master/rubik.css */
/* HTML and CSS layout already set before implementing perspective */

*,
*:before,
*:after {
  box-sizing: border-box;
}

bg {
}

main {
  --size: clamp(10rem, 15vw, 15rem);
  --half-size: calc(var(--size) / 2);
  --offset: var(--size);
  --negative-offset: calc(-0.5 * var(--size));
  --bg-1: red;
  --bg-2: green;
  --bg-3: blue;
  --bg-4: yellow;
  --bg-5: white;
  --bg-6: orange;

  position: absolute;
  top: calc(50% - var(--size) / 2);
  left: calc(50% - var(--size) / 2);
  width: var(--size);
  height: var(--size);
  perspective: calc(clamp(10rem, 15vw, 20rem) * 2);
  animation: cube-container-animation 20s ease infinite;
}

main > section {
  width: inherit;
  height: inherit;
  transform: rotateY(45deg);
  transform-style: preserve-3d;
  animation: cube-animation 5s linear infinite;
  -webkit-transform-origin: var(--half-size) var(--half-size) var(--half-size);
}

section > div {
  position: absolute;
  width: inherit;
  height: inherit;
  display: flex;
  flex-wrap: wrap;
  transform-style: preserve-3d;
  transform-origin: var(--half-size) var(--half-size) var(--half-size);
}

div > div {
  width: calc(var(--size) / 3);
  height: calc(var(--size) / 3);
  border: calc(var(--size) / 30) solid black;
  transform-style: preserve-3d;
}

section > div:first-of-type {
  transform: translateZ(0);
  background: var(--bg-1);
}

section > div:nth-of-type(2) {
  transform: rotateY(90deg);
  background: var(--bg-2);
}

section > div:nth-of-type(3) {
  transform: rotateY(-90deg);
  background: var(--bg-3);
}

section > div:nth-of-type(4) {
  transform: rotateX(-90deg);
  background: var(--bg-4);
}

section > div:nth-of-type(5) {
  transform: rotateX(90deg);
  background: var(--bg-5);
}

section > div:nth-of-type(6) {
  transform: translateZ(var(--offset));
  background: var(--bg-6);
}

@keyframes cube-animation {
  from {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  50% {
    transform: rotateX(180deg) rotateY(360deg) rotateZ(360deg);
  }
  to {
    transform: rotateX(360deg) rotateY(720deg) rotateZ(720deg);
  }
}

@keyframes cube-container-animation {
  from {
    top: 20%;
    left: 20%;
  }
  30% {
    top: 40%;
    left: 60%;
  }
  60% {
    top: 60%;
    left: 30%;
  }
  100% {
    top: 20%;
    left: 20%;
  }
}
